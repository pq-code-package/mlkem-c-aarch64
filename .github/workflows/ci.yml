# SPDX-License-Identifier: Apache-2.0

name: CI
on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["main"]
jobs:
  build_kat:
    strategy:
      fail-fast: false
      matrix:
        external:
         - ${{ github.repository_owner != 'pq-code-package' }}
        target:
         - runner: macos-latest
           name: 'MacOS'
           arch: 'arm64'
           cross-prefix: ' '
           cflags: '-DFORCE_AARCH64'
           nix-shell: ci
         - runner: pqcp-arm64
           name: 'ubuntu-latest (aarch64)'
           arch: 'aarch64'
           cross-prefix: ' '
           cflags: '-DFORCE_AARCH64'
           nix-shell: 'ci'
         - runner: ubuntu-latest
           name: 'ubuntu-latest (x86_64, cross)'
           arch: 'x86_64'
           cross-prefix: 'aarch64-unknown-linux-gnu-'
           cflags: '-DFORCE_AARCH64'
           nix-shell: 'x86_64-linux-cross-ci'
         - runner: ubuntu-latest
           name: 'ubuntu-latest (x86_64, native)'
           arch: 'x86_64'
           cross-prefix: ''
           nix-shell: 'ci'
        exclude:
         - {external: true,
            target: {
              runner: 'pqcp-arm64',
              name: 'ubuntu-latest (aarch64)',
              arch: 'aarch64',
              cross-prefix: ' ',
              cflags: '-DFORCE_AARCH64',
              nix-shell: 'ci'
            }}
    name: Functional tests (${{ matrix.target.name }})
    runs-on: ${{ matrix.target.runner }}
    steps:
      - uses: actions/checkout@v4
      - name: functest opt
        uses: ./.github/actions/functest
        with:
          nix-shell: ${{ matrix.target.nix-shell }}
          cflags: ${{ matrix.target.cflags }}
          cross-prefix: ${{ matrix.target.cross-prefix }}
          opt: true
      - name: functest non-opt
        uses: ./.github/actions/functest
        with:
          nix-shell: ${{ matrix.target.nix-shell }}
          cflags: ${{ matrix.target.cflags }}
          cross-prefix: ${{ matrix.target.cross-prefix }}
          opt: false
  lint:
    strategy:
      matrix:
        system: [ubuntu-latest]
    name: Linting
    runs-on: ${{ matrix.system }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/lint
        with:
          nix-shell: ci-linter
          cross-prefix: "aarch64-unknown-linux-gnu-"
  cbmc:
    strategy:
      matrix:
        system: [macos-latest]
    name: CBMC
    runs-on: ${{ matrix.system }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/cbmc
        with:
          nix-shell: ci-cbmc
  ec2_all:
    name: ${{ matrix.target.name }}
    permissions:
      contents: 'read'
      id-token: 'write'
    strategy:
      fail-fast: false
      matrix:
        target:
          - name: AMD EPYC 4th gen (c7a)
            ec2_instance_type: c7a.medium
            ec2_ami: ubuntu-latest (x86_64)
            cross-prefix: 'aarch64-unknown-linux-gnu-'
          - name: Intel Xeon 4th gen (c7i)
            ec2_instance_type: c7i.medium
            ec2_ami: ubuntu-latest (x86_64)
            cross-prefix: 'aarch64-unknown-linux-gnu-'
    uses: ./.github/workflows/ci_ec2_reusable.yml
    if: github.repository_owner == 'pq-code-package' && (github.event.label.name == 'benchmark' || github.ref == 'refs/heads/main')
    with:
      name: ${{ matrix.target.name }}
      ec2_instance_type: ${{ matrix.target.ec2_instance_type }}
      ec2_ami: ${{ matrix.target.ec2_ami }}
      cross-prefix: ${{ inputs.cross-prefix }}
      functest: true
      lint: true
      cbmc: false
      always_terminate: ${{ inputs.always_terminate }}
    secrets: inherit
