# SPDX-License-Identifier: Apache-2.0

name: bench-ec2-reusable
on:
  workflow_call:
    inputs:
      name:
        type: string
        description: Alternative name of instance
        default: Graviton2
      ec2_instance_type:
        type: string
        description: Type if EC2 instance to benchmark on
        default: t4g.small
      ec2_ami_id:
        type: string
        description: AMI ID
        default: ami-096ea6a12ea24a797
      cflags:
        type: string
        description: Custom CFLAGS for compilation
        default:
      archflags:
        type: string
        description: Custom ARCH flags for compilation
        default: -mcpu=neoverse-n1 -march=armv8.2-a
      store_results:
        type: string
        description: Indicates if results should be pushed to github pages
        default: 'false'
      always_terminate:
        type: string
        description: Indicates if instance should always be terminated, even on failure
        default: 'true'
      bench_extra_args:
        type: string
        description: Additional command line to be appended to `bench` script
        default: ''
env:
  AWS_ROLE: arn:aws:iam::559050233797:role/mlkem-c-aarch64-gh-action
  AWS_REGION: us-east-1
jobs:
  start-ec2-runner:
    name: Start ${{ github.event.inputs.name }} (${{ github.event.inputs.ec2_instance_type }})
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - uses: actions/checkout@v4
      - name: Clear nix-installer action cache
        uses: ./.github/actions/clear-cache
        with:
           key_prefix: determinatesystem-nix-installer-
           repository: ${{ github.repository }}
           gh_token: ${{ secrets.AWS_GITHUB_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.AWS_GITHUB_TOKEN }}
          ec2-image-id: ${{ github.event.github.event.inputs.ec2_ami_id }}
          ec2-instance-type: ${{ github.event.inputs.ec2_instance_type }}
          subnet-id: subnet-07b2729e5e065962f
          security-group-id: sg-0ab2e297196c8c381
  bench:
    name: Bench ${{ github.event.inputs.name }}
    runs-on: ${{ needs.start-ec2-runner.outputs.label }}
    needs: start-ec2-runner # required to start the main job when the runner is ready
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/bench
        with:
          use-nix: true
          name: ${{ github.event.inputs.name }}
          cflags: ${{ github.event.inputs.cflags }}
          archflags: ${{ github.event.inputs.archflags }}
          perf: PERF
          store_results: ${{ github.event.inputs.store_results }}
          bench_extra_args: ${{ github.event.inputs.bench_extra_args }}
          gh_token: ${{ secrets.AWS_GITHUB_TOKEN }}
  stop-ec2-runner:
    name: Stop ${{ github.event.github.event.inputs.name }} (${{ github.event.github.event.inputs.ec2_instance_type }})
    permissions:
      contents: 'read'
      id-token: 'write'
    needs:
      - start-ec2-runner
      - bench # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ (github.event.inputs.always_terminate == 'true' && always()) || success() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.AWS_GITHUB_TOKEN }}
          label: ${{ needs.start-ec2-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-ec2-runner.outputs.ec2-instance-id }}
