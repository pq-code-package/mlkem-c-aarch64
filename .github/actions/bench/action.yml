# SPDX-License-Identifier: Apache-2.0

name: Bench MLKEM-C-AArch64
description: Run benchmarking script

inputs:
  name:
    description: Name for the benchmarking run
    required: true
  perf:
    description: Method of obtaining PMU metrics
    required: true
    default: 'PERF'
    type: choice
    options:
      - NO
      - PERF
      - PMU
      - M1
  cflags:
    description: CFLAGS to pass to compilation
    default: ''
  archflags:
    description: ARCHFLAGS to pass to compilation
    default: ''
  bench_extra_args:
    description: Further arguments to be appended to command line for `bench` script
    default: ''
  store_results:
    description: Whether to push results to GH pages
    default: 'false'
  gh_token:
     description: GitHub access token
     required: true
  use-nix:
    description: Whether to run in the default Nix environment
    default: true
  custom_shell:
    description: The shell to use. Only relevant if use-nix is 'false'
    default: 'bash'
runs:
  using: composite
  steps:
    - name: Setup nix
      if: ${{ inputs.use-nix }}
      uses: ./.github/actions/setup-nix
      with:
        devShell: ci
        script: |
          ARCH=$(uname -m)
          cat >> $GITHUB_STEP_SUMMARY <<-EOF
            ## Setup
            Architecture: $ARCH
            - $(uname -a)
            - $(nix --version)
            - $(astyle --version)
            - $(${{ matrix.target.cross_prefix }}gcc --version | grep -m1 "")
            - $(bash --version | grep -m1 "")

            ## CPU Info
            $(cat /proc/cpuinfo)
          EOF
    - name: Set shell
      shell: bash
      run: echo SHELL="${{ inputs.use-nix && 'nix develop .#ci -c bash -e {0}' || inputs.custom_shell }}" >> $GITHUB_ENV
    - name: Run benchmark
      shell: ${{ env.SHELL }}
      run: |
        tests bench -c ${{ inputs.perf }} --cflags "${{ inputs.cflags }}" --arch-flags "${{ inputs.archflags }}" -v --output output.json ${{ inputs.bench_extra_args }}
    - name: Store benchmark result
      if: ${{ inputs.store_results == 'true' }}
      uses: benchmark-action/github-action-benchmark@v1
      with:
        name: ${{ inputs.name }}
        tool: 'customSmallerIsBetter'
        output-file-path: output.json
        github-token: ${{ inputs.gh_token }}
        auto-push: true
