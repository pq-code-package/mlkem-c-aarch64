# SPDX-License-Identifier: Apache-2.0

name: Functional tests
description: Run functional tests for MLKEM-C_AArch64

inputs:
  nix-shell:
    description: Run in the specified Nix environment if exists
    default: "ci"
  custom_shell:
    description: The shell to use. Only relevant if no nix-shell specified
    default: "bash"
  cflags:
    description: CFLAGS to pass to compilation
    default: ""
  mode:
    description: For auto-determining the default cross-prefix (e.g. native | cross )
    default: "native"
  opt:
    description: opt flag to pass to test script
    default: "true"
  func:
    description: Determine whether to run functional test or not
    default: "true"
  kat:
    description: Determine whether to run kat test or not
    default: "true"
  nistkat:
    description: Determine whether to run nistkat test or not
    default: "true"
runs:
  using: composite
  steps:
      - name: Preprocess
        shell: ${{ env.SHELL }}
        run: |
          arch=$(uname -m)
          if [[ ${{ inputs.mode }} == "cross" && $arch == "x86_64" ]]; then
              cross_prefix="aarch64-unknown-linux-gnu-"
          elif [[ ${{ inputs.mode }} == "cross" && ($arch == "aarch64" || $arch == "arm64") ]]; then
              cross_prefix="x86_64-unknown-linux-gnu-"
          else
              cross_prefix=""
          fi
          echo CROSS_PREFIX="$cross_prefix" >> $GITHUB_ENV
          echo OPT="${{ inputs.opt == 'true' && 'opt' || 'no-opt' }}" >> $GITHUB_ENV

          echo FUNC="${{ inputs.func == 'true' && 'func' || 'no-func' }}" >> $GITHUB_ENV
          echo KAT="${{ inputs.kat == 'true' && 'kat' || 'no-kat' }}" >> $GITHUB_ENV
          echo NISTKAT="${{ inputs.nistkat == 'true' && 'nistkat' || 'no-nistkat' }}" >> $GITHUB_ENV
      - name: Setup nix
        uses: ./.github/actions/setup-shell
        with:
          nix-shell: ${{ inputs.nix-shell }}
          custom_shell: ${{ inputs.custom_shell }}
          script: |
            ARCH=$(uname -m)
            cat >> $GITHUB_STEP_SUMMARY <<-EOF
              ## Setup
              Architecture: $ARCH
              - $(uname -a)
              - $(nix --version)
              - $(${{ env.CROSS_PREFIX }}gcc --version | grep -m1 "")
              - $(bash --version | grep -m1 "")
            EOF
      - name: Compile ${{ inputs.mode }} ${{ env.OPT }} tests (${{ env.FUNC }}, ${{ env.KAT }}, ${{ env.NISTKAT }})
        shell: ${{ env.SHELL }}
        run: |
          tests all  --cross-prefix="${{ env.CROSS_PREFIX }}" --cflags="${{ inputs.cflags }}" --${{ env.OPT }} --${{ env.FUNC }} --${{ env.KAT }} --${{ env.NISTKAT }} --compile --no-run -v
      - name: Run ${{ inputs.mode }} ${{ env.OPT }} tests (${{ env.FUNC }}, ${{ env.KAT }}, ${{ env.NISTKAT }})
        shell: ${{ env.SHELL }}
        run: |
          tests all  --cross-prefix="${{ env.CROSS_PREFIX }}" --cflags="${{ inputs.cflags }}" --${{ env.OPT }} --${{ env.FUNC }} --${{ env.KAT }} --${{ env.NISTKAT }} --no-compile --run -v
      - name: Post ${{ inputs.mode }} Tests
        shell: ${{ env.SHELL }}
        if: success() || failure()
        run: |
          make clean
