#!/usr/bin/env python
# SPDX-License-Identifier: Apache-2.0

import subprocess
from hashlib import sha256
import sys


def checksum(binary_path, expected_hash):
    """This script executes a binary file, captures its output, then generates and compares its SHA-256 hash with a provided one."""
    # Execute the binary and capture its output
    result = subprocess.run(
        [binary_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True
    )

    # Check for errors
    if result.returncode != 0:
        print(f"Binary execution failed with return code {result.returncode}")
        print(result.stderr)
        return

    # Generate SHA-256 hash of the binary's output
    actual_hash = sha256(result.stdout.encode()).hexdigest()

    # Compare the generated hash with the expected hash
    if actual_hash == expected_hash:
        print(f"{binary_path} Hashes match.")
    else:
        print(f"{binary_path} Hashes do not match: Expected {expected_hash}, got {actual_hash}")


if __name__ == "__main__":
    checksum(sys.argv[1], sys.argv[2])
