// SPDX-License-Identifier: Apache-2.0

#include "config.h"
#if defined(MLKEM_USE_AARCH64_ASM)

// Needed to provide ASM_LOAD directive
#include "common.i"

.macro barrett_reduce a
        sqdmulh t0.8h, \a\().8h, consts.h[1]
        srshr   t0.8h, t0.8h, #11
        mls     \a\().8h, t0.8h, consts.h[0]
.endm

.macro mulmod dst, src, const, const_twisted
        sqrdmulh tmp0.8h,    \src\().8h, \const_twisted\().8h
        mul      \dst\().8h, \src\().8h, \const\().8h
        mls      \dst\().8h, tmp0.8h,    consts.h[0]
.endm

.global poly_reduce_asm_opt
.global _poly_reduce_asm_opt

.p2align 4
const_addr:
        .short 3329
        .short 20159
        .short 0
        .short 0
        .short 0
        .short 0
        .short 0
        .short 0

        ptr    .req x0
        count  .req x1
        xtmp   .req x2

        q_data .req q0
        data   .req v0
        t0     .req v1
        consts .req v2

poly_reduce_asm_opt:
_poly_reduce_asm_opt:

        ASM_LOAD(xtmp, const_addr)
        ld1 {consts.8h}, [xtmp]

        mov count, #8
                                  // Instructions:    4
                                  // Expected cycles: 7
                                  // Expected IPC:    0.57

                                  // Cycle bound:     7.0
                                  // IPC bound:       0.57

                                  // Wall time:     0.00s
                                  // User time:     0.00s

                                  // ----- cycle (expected) ------>
                                  // 0                        25
                                  // |------------------------|----
        ldr q3, [x0], #64         // *.............................
        ldr q7, [x0, #-48]        // ..*...........................
        ldr q6, [x0, #-32]        // ....*.........................
        ldr q0, [x0, #-16]        // ......*.......................

                                   // ------ cycle (expected) ------>
                                   // 0                        25
                                   // |------------------------|-----
        // ldr q3, [x0], #64        // *..............................
        // ldr q7, [x0, #-48]       // ..*............................
        // ldr q6, [x0, #-32]       // ....*..........................
        // ldr q0, [x0, #-16]       // ......*........................

        sub count, count, #1
loop_start:
                                              // Instructions:    20
                                              // Expected cycles: 24
                                              // Expected IPC:    0.83

                                              // Cycle bound:     24.0
                                              // IPC bound:       0.83

                                              // Wall time:     0.36s
                                              // User time:     0.36s

                                              // ----- cycle (expected) ------>
                                              // 0                        25
                                              // |------------------------|----
        sqdmulh v28.8H, v3.8H, v2.H[1]        // *.............................
        sqdmulh v27.8H, v7.8H, v2.H[1]        // .*............................
        sqdmulh v20.8H, v6.8H, v2.H[1]        // ..*...........................
        sqdmulh v25.8H, v0.8H, v2.H[1]        // ...*..........................
        srshr v28.8H, v28.8H, #11             // ....*.........................
        srshr v27.8H, v27.8H, #11             // .....*........................
        srshr v20.8H, v20.8H, #11             // ......*.......................
        srshr v25.8H, v25.8H, #11             // .......*......................
        mls v3.8H, v28.8H, v2.H[0]            // ........*.....................
        mls v7.8H, v27.8H, v2.H[0]            // .........*....................
        mls v6.8H, v20.8H, v2.H[0]            // ..........*...................
        mls v0.8H, v25.8H, v2.H[0]            // ...........*..................
        str q3, [x0, #-64]                    // ............*.................
        ldr q3, [x0], #64                     // .............e................
        str q7, [x0, #-112]                   // ...............*..............
        ldr q7, [x0, #-48]                    // ................e.............
        str q6, [x0, #-96]                    // ..................*...........
        ldr q6, [x0, #-32]                    // ...................e..........
        str q0, [x0, #-80]                    // .....................*........
        ldr q0, [x0, #-16]                    // ......................e.......

                                              // ------- cycle (expected) ------->
                                              // 0                        25
                                              // |------------------------|-------
        // ldr q0, [x0], #64                   // e..........'............~........
        // sqdmulh v1.8h, v0.8h, v2.h[1]       // ...........*.....................
        // srshr   v1.8h, v1.8h, #11           // ...........'...*.................
        // mls     v0.8h, v1.8h, v2.h[0]       // ...........'.......*.............
        // str q0, [x0, #-64]                  // ...........'...........*.........
        // ldr q0, [x0, #-48]                  // ...e.......'...............~.....
        // sqdmulh v1.8h, v0.8h, v2.h[1]       // ...........'*....................
        // srshr   v1.8h, v1.8h, #11           // ...........'....*................
        // mls     v0.8h, v1.8h, v2.h[0]       // ...........'........*............
        // str q0, [x0, #-48]                  // ..~........'..............*......
        // ldr q0, [x0, #-32]                  // ......e....'..................~..
        // sqdmulh v1.8h, v0.8h, v2.h[1]       // ...........'.*...................
        // srshr   v1.8h, v1.8h, #11           // ...........'.....*...............
        // mls     v0.8h, v1.8h, v2.h[0]       // ...........'.........*...........
        // str q0, [x0, #-32]                  // .....~.....'.................*...
        // ldr q0, [x0, #-16]                  // .........e.'.....................
        // sqdmulh v1.8h, v0.8h, v2.h[1]       // ...........'..*..................
        // srshr   v1.8h, v1.8h, #11           // ...........'......*..............
        // mls     v0.8h, v1.8h, v2.h[0]       // ...........'..........*..........
        // str q0, [x0, #-16]                  // ........~..'....................*

        sub count, count, #1
        cbnz count, loop_start
                                              // Instructions:    16
                                              // Expected cycles: 18
                                              // Expected IPC:    0.89

                                              // Cycle bound:     18.0
                                              // IPC bound:       0.89

                                              // Wall time:     0.04s
                                              // User time:     0.04s

                                              // ----- cycle (expected) ------>
                                              // 0                        25
                                              // |------------------------|----
        sqdmulh v28.8H, v3.8H, v2.H[1]        // *.............................
        sqdmulh v27.8H, v7.8H, v2.H[1]        // .*............................
        sqdmulh v20.8H, v6.8H, v2.H[1]        // ..*...........................
        sqdmulh v25.8H, v0.8H, v2.H[1]        // ...*..........................
        srshr v28.8H, v28.8H, #11             // ....*.........................
        srshr v27.8H, v27.8H, #11             // .....*........................
        srshr v20.8H, v20.8H, #11             // ......*.......................
        mls v3.8H, v28.8H, v2.H[0]            // .......*......................
        mls v7.8H, v27.8H, v2.H[0]            // ........*.....................
        srshr v28.8H, v25.8H, #11             // .........*....................
        mls v6.8H, v20.8H, v2.H[0]            // ..........*...................
        str q3, [x0, #-64]                    // ...........*..................
        mls v0.8H, v28.8H, v2.H[0]            // ............*.................
        str q7, [x0, #-48]                    // .............*................
        str q6, [x0, #-32]                    // ...............*..............
        str q0, [x0, #-16]                    // .................*............

                                               // ------ cycle (expected) ------>
                                               // 0                        25
                                               // |------------------------|-----
        // sqdmulh v28.8H, v3.8H, v2.H[1]       // *..............................
        // sqdmulh v27.8H, v7.8H, v2.H[1]       // .*.............................
        // sqdmulh v20.8H, v6.8H, v2.H[1]       // ..*............................
        // sqdmulh v25.8H, v0.8H, v2.H[1]       // ...*...........................
        // srshr v28.8H, v28.8H, #11            // ....*..........................
        // srshr v27.8H, v27.8H, #11            // .....*.........................
        // srshr v20.8H, v20.8H, #11            // ......*........................
        // srshr v25.8H, v25.8H, #11            // .........*.....................
        // mls v3.8H, v28.8H, v2.H[0]           // .......*.......................
        // mls v7.8H, v27.8H, v2.H[0]           // ........*......................
        // mls v6.8H, v20.8H, v2.H[0]           // ..........*....................
        // mls v0.8H, v25.8H, v2.H[0]           // ............*..................
        // str q3, [x0, #-64]                   // ...........*...................
        // str q7, [x0, #-48]                   // .............*.................
        // str q6, [x0, #-32]                   // ...............*...............
        // str q0, [x0, #-16]                   // .................*.............


        ret

        .unreq ptr
        .unreq count
        .unreq xtmp
        .unreq q_data
        .unreq data
        .unreq t0
        .unreq consts

.global poly_mulcache_compute_asm_opt
.global _poly_mulcache_compute_asm_opt

        cache_ptr  .req x0
        data_ptr   .req x1
        zeta_ptr   .req x2
        zeta_twisted_ptr   .req x3
        xtmp       .req x4

        count      .req x5

        data_odd       .req v1

        zeta           .req v2
        zeta_twisted   .req v3
        q_zeta         .req q2
        q_zeta_twisted .req q3

        q_tmp0  .req q4
        q_tmp1  .req q5
        tmp0    .req v4
        tmp1    .req v5
        consts  .req v6
        dst     .req v7
        q_dst   .req q7

poly_mulcache_compute_asm_opt:
_poly_mulcache_compute_asm_opt:
        ASM_LOAD(xtmp, const_addr)
        ld1 {consts.8h}, [xtmp]

        mov count, #(16)
                                           // Instructions:    5
                                           // Expected cycles: 8
                                           // Expected IPC:    0.62
                                           //
                                           // Cycle bound:     8.0
                                           // IPC bound:       0.62
                                           //
                                           // Wall time:     0.01s
                                           // User time:     0.01s
                                           //
                                           // ----- cycle (expected) ------>
                                           // 0                        25
                                           // |------------------------|----
        ldr q22, [x1], #32                 // *.............................
        ldr q21, [x1, #-16]                // ..*...........................
        ldr q17, [x2], #16                 // ....*.........................
        uzp2 v23.8H, v22.8H, v21.8H        // ......*.......................
        ldr q22, [x3], #16                 // .......*......................

                                            // ------ cycle (expected) ------>
                                            // 0                        25
                                            // |------------------------|-----
        // ldr q21, [x1], #32               // *..............................
        // ldr q23, [x1, #-16]              // ..*............................
        // ldr q17, [x2], #16               // ....*..........................
        // uzp2 v23.8H, v21.8H, v23.8H      // ......*........................
        // ldr q22, [x3], #16               // .......*.......................

        sub count, count, #1
mulcache_compute_loop_start:
                                               // Instructions:    9
                                               // Expected cycles: 13
                                               // Expected IPC:    0.69
                                               //
                                               // Cycle bound:     13.0
                                               // IPC bound:       0.69
                                               //
                                               // Wall time:     0.08s
                                               // User time:     0.08s
                                               //
                                               // ----- cycle (expected) ------>
                                               // 0                        25
                                               // |------------------------|----
        ldr q21, [x1], #32                     // e.............................
        sqrdmulh v30.8H, v23.8H, v22.8H        // ..*...........................
        mul v18.8H, v23.8H, v17.8H             // ...*..........................
        ldr q23, [x1, #-16]                    // ....e.........................
        ldr q17, [x2], #16                     // ......e.......................
        mls v18.8H, v30.8H, v6.H[0]            // ........*.....................
        uzp2 v23.8H, v21.8H, v23.8H            // .........e....................
        ldr q22, [x3], #16                     // ..........e...................
        str q18, [x0], #16                     // ............*.................

                                                  // ------ cycle (expected) ------>
                                                  // 0                        25
                                                  // |------------------------|-----
        // ldr q4, [x1], #32                      // e............~............~....
        // ldr q5, [x1, #-16]                     // ....e........'...~........'....
        // ldr q2, [x2], #16                      // ......e......'.....~......'....
        // ldr q3, [x3], #16                      // ..........e..'.........~..'....
        // uzp2 v1.8h, v4.8h, v5.8h               // .........e...'........~...'....
        // sqrdmulh v4.8h,    v1.8h, v3.8h        // ..~..........'.*..........'.~..
        // mul      v7.8h, v1.8h, v2.8h           // ...~.........'..*.........'..~.
        // mls      v7.8h, v4.8h,    v6.h[0]      // ........~....'.......*....'....
        // str q7, [x0], #16                      // ............~'...........*'....

        sub count, count, #1
        cbnz count, mulcache_compute_loop_start
                                               // Instructions:    4
                                               // Expected cycles: 10
                                               // Expected IPC:    0.40
                                               //
                                               // Cycle bound:     10.0
                                               // IPC bound:       0.40
                                               //
                                               // Wall time:     0.01s
                                               // User time:     0.01s
                                               //
                                               // ----- cycle (expected) ------>
                                               // 0                        25
                                               // |------------------------|----
        sqrdmulh v18.8H, v23.8H, v22.8H        // *.............................
        mul v3.8H, v23.8H, v17.8H              // .*............................
        mls v3.8H, v18.8H, v6.H[0]             // .....*........................
        str q3, [x0], #16                      // .........*....................

                                                // ------ cycle (expected) ------>
                                                // 0                        25
                                                // |------------------------|-----
        // sqrdmulh v30.8H, v23.8H, v22.8H      // *..............................
        // mul v18.8H, v23.8H, v17.8H           // .*.............................
        // mls v18.8H, v30.8H, v6.H[0]          // .....*.........................
        // str q18, [x0], #16                   // .........*.....................


        ret

        .unreq cache_ptr
        .unreq data_ptr
        .unreq zeta_ptr
        .unreq xtmp

        .unreq data_odd
        .unreq zeta
        .unreq q_zeta
        .unreq zeta_twisted
        .unreq q_zeta_twisted

        .unreq q_tmp0
        .unreq q_tmp1
        .unreq tmp0
        .unreq tmp1
        .unreq consts
        .unreq dst


#endif /* MLKEM_USE_AARCH64_ASM */
